<?xml version="1.0" encoding="UTF-8"?>

<configuration>
  
  <appSettings>
    <add key="uploadpath" value="C:\Uploads\CelerFT\" />
  </appSettings>
  
  <system.web>
    <httpRuntime maxRequestLength="2147483647" requestLengthDiskThreshold="10240" targetFramework="4.5" />
  </system.web>
  
  <system.webServer>
    
    <!-- uncomment for production-->
    <!--<iisnode node_env="production" debuggingEnabled="false" devErrorsEnabled="false" nodeProcessCountPerApplication="0" maxRequestBufferSize="52428800" />
    -->
    
      <httpErrors existingResponse="PassThrough" />
    
      <defaultDocument>
        <files>
          <add value="server.js" />
        </files>
      </defaultDocument>
    
      <handlers>
        <!-- indicates that the server.js file is a node.js application to be handled by the iisnode module -->
        <add name="iisnode" path="*.js" verb="*" modules="iisnode" />
      </handlers>
    
      <rewrite>
        <rules>
          <rule name="CelerFTJS">
            <match url="/*" />
            <action type="Rewrite" url="server.js" />
          </rule>
          
          <!-- Don't interfere with requests for node-inspector debugging -->
          <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
            <match url="^server.js\/debug[\/]?" />
          </rule>
        </rules>
    </rewrite>
    
    <asp enableChunkedEncoding="true" />
    
    <!-- exclude node_modules directory and subdirectories from serving  
    by IIS since these are implementation details of node.js applications -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="2147483648" />
          <hiddenSegments>
            <add segment="node_modules" />
          </hiddenSegments>
      </requestFiltering>
  </security>
  </system.webServer>
</configuration>
